## Docker GROBID image
# Reminder: Before building the docker GROBID image, remember to build grobid using the profile docker, in
# order to correctly set up the grobid-home in the web.xml.

# > mvn clean install -P docker

# > docker build -t lfoppiano/grobid:GROBID_VERSION --build-arg GROBID_VERSION=GROBID_VERSION .
# Example: > docker build -t lfoppiano/grobid:1.0.0 --build-arg GROBID_VERSION=1.0.0 .

# > docker run -t --rm -p 8080:8080 {image_name}

# To find out the docker machine ip
# > docker-machine ip

# To connect to the container with a bash shell
# > docker exec -i -t {container_name} /bin/bash

FROM openjdk:8-jdk as builder

MAINTAINER Luca Foppiano <luca.foppiano@inria.fr>, Patrice Lopez <patrice.lopez@science-miner.org>

ARG GROBID_VERSION

LABEL Description="This image is used to generate a GROBID image" Version="${GROBID_VERSION}"

ENV JAVA_OPTS=-Xmx4g

USER root
RUN apt-get update && apt-get -y --no-install-recommends install libxml2

# For test
ADD ./grobid-home/build/distributions/grobid-home-${GROBID_VERSION}.zip /opt

RUN unzip /opt/grobid-home-${GROBID_VERSION}.zip -d /opt && rm /opt/grobid-home-${GROBID_VERSION}.zip

#RUN cd /opt && \
#    git clone https://github.com/kermitt2/grobid.git grobid && \
#    cd /opt/grobid && \
#    git checkout ${GROBID_VERSION} && \
#    ./gradlew clean install

#RUN unzip /opt/grobid/grobid-home/build/distributions/grobid-home-${GROBID_VERSION}.zip -d /opt

COPY ./grobid-service/build/libs/grobid-service-${GROBID_VERSION}.war /var/lib/jetty/webapps/ROOT.war

# Workaround otherwise the tmp directory is not writeable (owner is root)
RUN mkdir /opt/grobid-home/tmp
RUN chown -R jetty:jetty /opt/grobid-home/
USER jetty
VOLUME ["/opt/grobid-home/tmp", "/root/.gradle"]


#
#FROM jetty:9.4-jre8
#
#ARG GROBID_VERSION
#
#LABEL \
#    org.label-schema.name="Grobid" \
#    org.label-schema.description="Image with GROBID service" \
#    org.label-schema.url="https://github.com/kermitt2/grobid/blob/master/README.md" \
#    org.label-schema.version=${GROBID_VERSION}
#
#ENV JAVA_OPTS=-Xmx4g
#
#COPY --from=builder /opt/grobid /opt/grobid
#
#RUN apt-get update && apt-get -y --no-install-recommends install libxml2 git
#
## Workaround otherwise the tmp directory is not writeable (owner is root)
#RUN mkdir /opt/grobid-home/tmp
#RUN chown -R jetty:jetty /opt/grobid-home/
#VOLUME ["/opt/grobid-home/tmp", "/root/.gradle"]
#

## Docker tricks:

# - remove all stopped containers
# > docker rm $(docker ps -a -q)

# - remove all untagged images
# > docker rmi $(docker images | grep "^<none>" | awk "{print $3}")

# - "Cannot connect to the Docker daemon. Is the docker daemon running on this host?"
# > docker-machine restart



#### ORIGINAL multistep ####
#FROM openjdk:8-jdk as builder
#
#ARG GROBID_VERSION=0.5.0
#
#RUN cd /opt && \
#    wget https://github.com/kermitt2/grobid/archive/${GROBID_VERSION}.zip && \
#    unzip ${GROBID_VERSION}.zip && \
#    mv /opt/grobid-${GROBID_VERSION} /opt/grobid && \
#    cd /opt/grobid && \
#    ./gradlew clean install
#
#
#FROM openjdk:8-jre-slim
#
#ARG GROBID_VERSION=0.5.0
#
#LABEL \
#    org.label-schema.name="Grobid" \
#    org.label-schema.description="Image with GROBID service" \
#    org.label-schema.url="https://github.com/kermitt2/grobid/blob/master/README.md" \
#    org.label-schema.version=${GROBID_VERSION}
#
#ENV JAVA_OPTS=-Xmx4g
#
#COPY --from=builder /opt/grobid /opt/grobid
#
#RUN mkdir /opt/grobid/grobid-home/tmp && \
#    apt-get update && \
#    apt-get -y --no-install-recommends install \
#        libxml2
#
#VOLUME ["/opt/grobid/grobid-home/tmp", "/root/.gradle"]
#
#WORKDIR /opt/grobid
#
#CMD ["./gradlew", "run"]

